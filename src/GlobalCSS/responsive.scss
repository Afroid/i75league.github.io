// Column container, wrap this around columns to make them display in line with each other
.col-container {
    display: flex;
    flex-wrap: wrap;
}

/** 
* 12 columns make up each column container. Specify 1-12 for how many columns you want the 
* element to take up.
* ex: 'col-4'
*/
$gridColumns: 12;
@for $i from 1 through $gridColumns {
    // default sizing, element will be this size unless a breakpoint is specified
    .col-#{$i} {
        width: percentage($i / $gridColumns);
        box-sizing: border-box;
    }
}


/**
* media queries & breakpoints (can specify none if you want, multiple, or all) 
* ex: 'col-sm-12 col-lg-3'
*/

@for $i from 1 through $gridColumns {
    // Small
    @media screen and (max-width: 767px) {
        .col-sm-#{$i} {
            width: percentage($i / $gridColumns);
            box-sizing: border-box;
        }
    }

    // Medium
    @media screen and (min-width: 768px) and (max-width: 991px) {
        .col-md-#{$i} {
            width: percentage($i / $gridColumns);
            box-sizing: border-box;
        }
    }

    // Large
    @media screen and (min-width: 992px) {
        .col-lg-#{$i} {
            width: percentage($i / $gridColumns);
            box-sizing: border-box;
        }
    }
}

/**
* An element with the class 'col' and no number will auto-fill the available columns
* if the surrounding elements also have the class 'col', they will all take up an even amount
* of the available columns.
*/
.col {
    flex-grow: 1;
}